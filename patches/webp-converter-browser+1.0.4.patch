diff --git a/node_modules/webp-converter-browser/dist/index.min.js b/node_modules/webp-converter-browser/dist/index.min.js
index 454edc9..7855510 100644
--- a/node_modules/webp-converter-browser/dist/index.min.js
+++ b/node_modules/webp-converter-browser/dist/index.min.js
@@ -1,2 +1,2 @@
-!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).webpConverterBrowser={})}(this,(function(e){"use strict";function t(e,{quality:t,width:i,height:n}={}){return new Promise((function(o,r){var u=document.createElement("canvas"),h=u.getContext("2d"),a=new Image;a.src=e,a.crossOrigin="anonymous",a.onload=function(e){u.width=i||a.width,u.height=n||a.height,URL.revokeObjectURL(e.target.src),h.drawImage(e.target,0,0,u.width,u.height),u.toBlob((function(e){o(e)}),"image/webp",t||.75)},a.onerror=function(e){return r(e)}}))}function i(e,{quality:i,width:n,height:o}={}){return t(URL.createObjectURL(e),{quality:i,width:n,height:o})}e.arrayBufferToWebP=function(e,{quality:t,width:n,height:o}={}){return i(new Blob([e]),{quality:t,width:n,height:o})},e.blobToWebP=i,e.srcToWebP=t,Object.defineProperty(e,"__esModule",{value:!0})}));
+!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).webpConverterBrowser={})}(this,(function(t){"use strict";var e=.75;function i(t,{quality:i,width:h,height:n,keepRatio:o}={}){return new Promise((function(r,d){var u=document.createElement("canvas"),a=u.getContext("2d"),g=new Image;g.src=t,g.crossOrigin="anonymous",g.onload=function(t){var d=function(t,e,i,h,n=!0){return i&&h?{width:i,height:h}:i||h?i?i>t?{width:t,height:e}:n?{width:i,height:e*i/t}:{width:i,height:e}:h?h>e?{width:t,height:e}:n?{width:t*h/e,height:h}:{width:t,height:h}:{width:t,height:e}:{width:t,height:e}}(g.width,g.height,h,n,o);u.width=d.width,u.height=d.height,URL.revokeObjectURL(t.target.src),a.drawImage(t.target,0,0,u.width,u.height),u.toBlob((function(t){r(t)}),"image/webp",i||e)},g.onerror=function(t){return d(t)}}))}function h(t,{quality:e,width:h,height:n}={}){return i(URL.createObjectURL(t),{quality:e,width:h,height:n})}t.arrayBufferToWebP=function(t,{quality:e,width:i,height:n}={}){return h(new Blob([t]),{quality:e,width:i,height:n})},t.blobToWebP=h,t.srcToWebP=i,Object.defineProperty(t,"__esModule",{value:!0})}));
 //# sourceMappingURL=index.min.js.map
diff --git a/node_modules/webp-converter-browser/lib/index.d.ts b/node_modules/webp-converter-browser/lib/index.d.ts
index 6e6194a..49a4a8c 100644
--- a/node_modules/webp-converter-browser/lib/index.d.ts
+++ b/node_modules/webp-converter-browser/lib/index.d.ts
@@ -2,11 +2,12 @@ interface Options {
     quality?: number;
     width?: number;
     height?: number;
+    keepRatio?: boolean;
 }
 /**
  * When it cause CORS, you may failed to use
  */
-export declare function srcToWebP(src: string, { quality, width, height }?: Options): Promise<Blob>;
+export declare function srcToWebP(src: string, { quality, width, height, keepRatio, }?: Options): Promise<Blob>;
 export declare function blobToWebP(data: Blob, { quality, width, height }?: Options): Promise<Blob>;
 export declare function arrayBufferToWebP(data: ArrayBuffer, { quality, width, height }?: Options): Promise<Blob>;
 export {};
diff --git a/node_modules/webp-converter-browser/lib/index.js b/node_modules/webp-converter-browser/lib/index.js
index a6d7705..7dc1e82 100644
--- a/node_modules/webp-converter-browser/lib/index.js
+++ b/node_modules/webp-converter-browser/lib/index.js
@@ -4,6 +4,49 @@ exports.__esModule = true;
 exports.arrayBufferToWebP = arrayBufferToWebP;
 exports.blobToWebP = blobToWebP;
 exports.srcToWebP = srcToWebP;
+function determineSize(originWidth, originHeight, width, height, keepRatio = true) {
+  // width와 height를 명확히 입력
+  if (width && height) return {
+    width: width,
+    height: height
+  };
+  if (!width && !height) return {
+    width: originWidth,
+    height: originHeight
+  };
+  if (width) {
+    if (width > originWidth) return {
+      width: originWidth,
+      height: originHeight
+    };
+    if (!keepRatio) return {
+      width: width,
+      height: originHeight
+    };
+    return {
+      width: width,
+      height: originHeight * width / originWidth
+    };
+  }
+  if (height) {
+    if (height > originHeight) return {
+      width: originWidth,
+      height: originHeight
+    };
+    if (!keepRatio) return {
+      width: originWidth,
+      height: height
+    };
+    return {
+      width: originWidth * height / originHeight,
+      height: height
+    };
+  }
+  return {
+    width: originWidth,
+    height: originHeight
+  };
+}
 var DEFAULT_QUALITY = 0.75;
 
 /**
@@ -12,7 +55,8 @@ var DEFAULT_QUALITY = 0.75;
 function srcToWebP(src, {
   quality: quality,
   width: width,
-  height: height
+  height: height,
+  keepRatio: keepRatio
 } = {}) {
   return new Promise(function (resolve, reject) {
     var canvas = document.createElement('canvas');
@@ -21,8 +65,10 @@ function srcToWebP(src, {
     image.src = src;
     image.crossOrigin = 'anonymous';
     image.onload = function (e) {
-      canvas.width = width || image.width;
-      canvas.height = height || image.height;
+      // eslint-disable-next-line max-len
+      var size = determineSize(image.width, image.height, width, height, keepRatio);
+      canvas.width = size.width;
+      canvas.height = size.height;
       // @ts-ignore
       URL.revokeObjectURL(e.target.src);
       // @ts-ignore
diff --git a/node_modules/webp-converter-browser/lib/index.mjs b/node_modules/webp-converter-browser/lib/index.mjs
index 46fa23a..4d82497 100644
--- a/node_modules/webp-converter-browser/lib/index.mjs
+++ b/node_modules/webp-converter-browser/lib/index.mjs
@@ -1,3 +1,46 @@
+function determineSize(originWidth, originHeight, width, height, keepRatio = true) {
+  // width와 height를 명확히 입력
+  if (width && height) return {
+    width: width,
+    height: height
+  };
+  if (!width && !height) return {
+    width: originWidth,
+    height: originHeight
+  };
+  if (width) {
+    if (width > originWidth) return {
+      width: originWidth,
+      height: originHeight
+    };
+    if (!keepRatio) return {
+      width: width,
+      height: originHeight
+    };
+    return {
+      width: width,
+      height: originHeight * width / originWidth
+    };
+  }
+  if (height) {
+    if (height > originHeight) return {
+      width: originWidth,
+      height: originHeight
+    };
+    if (!keepRatio) return {
+      width: originWidth,
+      height: height
+    };
+    return {
+      width: originWidth * height / originHeight,
+      height: height
+    };
+  }
+  return {
+    width: originWidth,
+    height: originHeight
+  };
+}
 var DEFAULT_QUALITY = 0.75;
 
 /**
@@ -6,7 +49,8 @@ var DEFAULT_QUALITY = 0.75;
 export function srcToWebP(src, {
   quality: quality,
   width: width,
-  height: height
+  height: height,
+  keepRatio: keepRatio
 } = {}) {
   return new Promise(function (resolve, reject) {
     var canvas = document.createElement('canvas');
@@ -15,8 +59,10 @@ export function srcToWebP(src, {
     image.src = src;
     image.crossOrigin = 'anonymous';
     image.onload = function (e) {
-      canvas.width = width || image.width;
-      canvas.height = height || image.height;
+      // eslint-disable-next-line max-len
+      var size = determineSize(image.width, image.height, width, height, keepRatio);
+      canvas.width = size.width;
+      canvas.height = size.height;
       // @ts-ignore
       URL.revokeObjectURL(e.target.src);
       // @ts-ignore
